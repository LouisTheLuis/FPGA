module sig_gen #(parameter MESSAGE_WIDTH = 8) (input wire clk_in, input wire rst_in,
		input wire [MESSAGE_WIDTH-1:0] msg_in, 
		input wire trigger_in,
		output logic data_out,
		output logic status_out);
	// My implementation
	logic [1:0] counter;
	parameter INDEX_SIZE = $clog2(MESSAGE_WIDTH);
	logic [INDEX_SIZE:0] index = MESSAGE_WIDTH;

	always_ff @(posedge clk_in) begin
		if (rst_in) begin
			status_out <= 0;
			data_out <= 0;
		end else begin
			if (trigger_in == 1) begin
				status_out <= 1;
				counter <= 1;
				data_out <= msg_in[index - 1];
				index <= index - 1;
			end else begin
				if (index > 0 && counter < 2 && status_out == 1) begin
					counter <= counter + 1;
				end else if (index > 0 && status_out == 1) begin
				       	counter <= 1;
					data_out <= msg_in[index - 1];
					index <= index - 1;	
				end else if (index == 0 && counter < 2) begin
					counter <= counter + 1;
				end else begin
					status_out <= 0;
					data_out <= 0;
				end
			end
		end
	end
endmodule
